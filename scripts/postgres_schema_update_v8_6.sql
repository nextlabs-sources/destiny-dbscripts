-- Enhanced login security
ALTER TABLE APPLICATION_USER
  ADD COLUMN IF NOT EXISTS FAILED_LOGIN_ATTEMPTS INTEGER DEFAULT 0 NOT NULL,
  ADD COLUMN IF NOT EXISTS LOCKED BOOLEAN DEFAULT false NOT NULL;

ALTER TABLE SUPER_APPLICATION_USER
  ADD COLUMN IF NOT EXISTS FAILED_LOGIN_ATTEMPTS INTEGER DEFAULT 0 NOT NULL,
  ADD COLUMN IF NOT EXISTS LOCKED BOOLEAN DEFAULT false NOT NULL;

CREATE OR REPLACE VIEW APP_USER_VIEW AS 
SELECT USERNAME, FIRST_NAME, LAST_NAME, DOMAIN_ID, PRIMARY_GROUP_ID, ENCODE(PASSWORD::bytea, 'hex') as PASSWORD, INITLOGIN_DONE, LOCKED, FAILED_LOGIN_ATTEMPTS FROM SUPER_APPLICATION_USER
UNION ALL
SELECT USERNAME, FIRST_NAME, LAST_NAME, DOMAIN_ID, PRIMARY_GROUP_ID, ENCODE(PASSWORD::bytea, 'hex') as PASSWORD, INITLOGIN_DONE, LOCKED, FAILED_LOGIN_ATTEMPTS FROM APPLICATION_USER
  WHERE STATUS != 'DELETED' AND NOT EXISTS (
  	SELECT USERNAME FROM SUPER_APPLICATION_USER WHERE APPLICATION_USER.USERNAME = SUPER_APPLICATION_USER.USERNAME
  );

CREATE TABLE PASSWORD_HISTORY(
  ID NUMERIC(19,0) NOT NULL,
  USER_ID NUMERIC(19,0) NOT NULL,
  PASSWORD bytea NOT NULL,
  TIMESTAMP NUMERIC(19,0) NOT NULL,
  CONSTRAINT PASSWORD_HISTORY_PK PRIMARY KEY(
    ID
  )
);

CREATE INDEX IDX_PASSWORD_HISTORY_4_USER
ON PASSWORD_HISTORY (
	USER_ID ASC, TIMESTAMP DESC
);

-- Audit trail
CREATE TABLE ENTITY_AUDIT_LOG(
  ID NUMERIC(19,0) NOT NULL,
  TIMESTAMP NUMERIC(19,0) NOT NULL,
  ACTION VARCHAR(10) NOT NULL,
  ACTOR_ID NUMERIC(19,0) NOT NULL,
  ACTOR VARCHAR(130) NOT NULL,
  ENTITY_TYPE CHAR(2) NOT NULL,
  ENTITY_ID NUMERIC(19,0) NOT NULL,
  OLD_VALUE VARCHAR(4000),
  NEW_VALUE VARCHAR(4000),
  CONSTRAINT ENTITY_AUDIT_LOG_PK PRIMARY KEY(
    ID
  ) 
);
CREATE INDEX IDX_ENTITY_AUDIT_4_ACTION
ON ENTITY_AUDIT_LOG (
	ACTION ASC
);
CREATE INDEX IDX_ENTITY_AUDIT_4_ACTOR
ON ENTITY_AUDIT_LOG (
	ACTOR ASC
);
CREATE INDEX IDX_ENTITY_AUDIT_4_TYPE
ON ENTITY_AUDIT_LOG (
	ENTITY_TYPE ASC
);

UPDATE OPERATOR_CONFIG set LABEL='exactly matches' WHERE DATA_TYPE='MULTIVAL' AND OPERATOR_KEY='equals_unordered' AND LABEL='=';
UPDATE OPERATOR_CONFIG set OPERATOR_KEY='=', LABEL='=' WHERE DATA_TYPE='MULTIVAL' AND OPERATOR_KEY='has' AND LABEL='has';
UPDATE OPERATOR_CONFIG set OPERATOR_KEY='!=', LABEL='!=' WHERE DATA_TYPE='MULTIVAL' AND OPERATOR_KEY='does_not_have' AND LABEL='does not have';
