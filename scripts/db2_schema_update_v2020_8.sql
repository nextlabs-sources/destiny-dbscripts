UPDATE SYS_CONFIG SET VALUE = 'https://docs.nextlabs.com/cc/2020.08' WHERE APPLICATION = 'application' AND CONFIG_KEY = 'help.url.base';

INSERT INTO ACCESS_CONTROL (ID, REQUEST_METHOD, URL_PATTERN, EXPRESSION) VALUES (HIBERNATE_SEQUENCE.NEXTVAL, 'POST', '/api/v1/policy/mgmt/generateXACML', 'hasAuthority(''VIEW_POLICY'') and hasAuthority(''VIEW_COMPONENT'') and hasAuthority(''VIEW_POLICY_MODEL'')');
INSERT INTO ACCESS_CONTROL (ID, REQUEST_METHOD, URL_PATTERN, EXPRESSION) VALUES (HIBERNATE_SEQUENCE.NEXTVAL, 'POST', '/api/v1/secureStore/list/keyPair', 'hasAuthority(''MANAGE_SECURE_STORE'')');
INSERT INTO ACCESS_CONTROL (ID, REQUEST_METHOD, URL_PATTERN, EXPRESSION) VALUES (HIBERNATE_SEQUENCE.NEXTVAL, 'POST', '/api/v1/secureStore/importKeyPair', 'hasAuthority(''MANAGE_SECURE_STORE'')');

UPDATE SYS_CONFIG SET VALUE = '9200', DEFAULT_VALUE = '9200' WHERE CONFIG_KEY = 'search.engine.port';

CREATE TABLE REMOTE_ENV
(
    ID BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY (  
		    START WITH +1  
		    INCREMENT BY +1  
		    MINVALUE +1  
		    MAXVALUE +9223372036854775807  
		    NO CYCLE  
		    CACHE 20  
		    NO ORDER ),
    NAME VARCHAR(255) NOT NULL,
    HOST VARCHAR(255) NOT NULL,
    PORT VARCHAR(5) NOT NULL,
    CLIENT_ID VARCHAR(4000) NOT NULL,
    USERNAME VARCHAR(255) NOT NULL,
    PASSWORD VARCHAR(4000) NOT NULL,
    IS_ACTIVE CHAR(1 BYTE) NOT NULL,
    CREATED_DATE TIMESTAMP,
    LAST_UPDATED_BY NUMERIC(19),
    LAST_UPDATED TIMESTAMP,
    CREATED_BY NUMERIC(19),
    VERSION NUMERIC(10) NOT NULL,
	CONSTRAINT REMOTE_ENV_PK PRIMARY KEY ( ID )
);

INSERT INTO ACCESS_CONTROL (ID, REQUEST_METHOD, URL_PATTERN, EXPRESSION) VALUES (HIBERNATE_SEQUENCE.NEXTVAL, 'POST', '/api/v1/remoteEnvironment/mgmt/add', 'hasAuthority(''CREATE_ENVIRONMENT_CONFIGURATION'')');
INSERT INTO ACCESS_CONTROL (ID, REQUEST_METHOD, URL_PATTERN, EXPRESSION) VALUES (HIBERNATE_SEQUENCE.NEXTVAL, 'POST', '/api/v1/remoteEnvironment/mgmt/modify', 'hasAuthority(''EDIT_ENVIRONMENT_CONFIGURATION'')');
INSERT INTO ACCESS_CONTROL (ID, REQUEST_METHOD, URL_PATTERN, EXPRESSION) VALUES (HIBERNATE_SEQUENCE.NEXTVAL, 'DELETE', '/api/v1/remoteEnvironment/mgmt/remove/{id:[0-9]+}', 'hasAuthority(''DELETE_ENVIRONMENT_CONFIGURATION'')');
INSERT INTO ACCESS_CONTROL (ID, REQUEST_METHOD, URL_PATTERN, EXPRESSION) VALUES (HIBERNATE_SEQUENCE.NEXTVAL, 'DELETE', '/api/v1/remoteEnvironment/mgmt/bulkDelete', 'hasAuthority(''DELETE_ENVIRONMENT_CONFIGURATION'')');
INSERT INTO ACCESS_CONTROL (ID, REQUEST_METHOD, URL_PATTERN, EXPRESSION) VALUES (HIBERNATE_SEQUENCE.NEXTVAL, 'POST', '/api/v1/remoteEnvironment/search', 'hasAuthority(''VIEW_ENVIRONMENT_CONFIGURATION'')');
INSERT INTO ACCESS_CONTROL (ID, REQUEST_METHOD, URL_PATTERN, EXPRESSION) VALUES (HIBERNATE_SEQUENCE.NEXTVAL, 'GET', '/api/v1/remoteEnvironment/mgmt/active/{id:[0-9]+}', 'hasAuthority(''VIEW_ENVIRONMENT_CONFIGURATION'')');
INSERT INTO ACCESS_CONTROL (ID, REQUEST_METHOD, URL_PATTERN, EXPRESSION) VALUES (HIBERNATE_SEQUENCE.NEXTVAL, 'GET', '/api/v1/remoteEnvironment/mgmt/{id:[0-9]+}', 'hasAuthority(''VIEW_ENVIRONMENT_CONFIGURATION'')');
INSERT INTO ACCESS_CONTROL (ID, REQUEST_METHOD, URL_PATTERN, EXPRESSION) VALUES (HIBERNATE_SEQUENCE.NEXTVAL, 'POST', '/api/v1/remoteEnvironment/mgmt/validateConnection', 'hasAuthority(''CREATE_ENVIRONMENT_CONFIGURATION'') or hasAuthority(''EDIT_ENVIRONMENT_CONFIGURATION'')');

INSERT INTO ACCESS_CONTROL (ID, REQUEST_METHOD, URL_PATTERN, EXPRESSION) VALUES (HIBERNATE_SEQUENCE.NEXTVAL, 'POST', '/api/v1/migration/export', 'hasAuthority(''VIEW_POLICY'') and hasAuthority(''VIEW_COMPONENT'') and hasAuthority(''VIEW_POLICY_MODEL'') and hasAuthority(''VIEW_ENVIRONMENT_CONFIGURATION'') and hasAuthority(''MIGRATE_POLICY'')');
INSERT INTO ACCESS_CONTROL (ID, REQUEST_METHOD, URL_PATTERN, EXPRESSION) VALUES (HIBERNATE_SEQUENCE.NEXTVAL, 'POST', '/api/v1/migration/import', 'hasAuthority(''CREATE_POLICY'') and hasAuthority(''EDIT_POLICY'') and hasAuthority(''VIEW_POLICY'') and hasAuthority(''CREATE_COMPONENT'') and hasAuthority(''EDIT_COMPONENT'') and hasAuthority(''VIEW_COMPONENT'') and hasAuthority(''CREATE_POLICY_MODEL'') and hasAuthority(''EDIT_POLICY_MODEL'') and hasAuthority(''DELETE_POLICY_MODEL'') and hasAuthority(''VIEW_POLICY_MODEL'')');